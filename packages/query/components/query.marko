<!-- Reference: https://github.com/TanStack/query/blob/beta/packages/react-query/src/useQuery.ts -->

import {QueryObserver} from 'react-query/core';

<attrs/{
  queryKey,
  default: queryFn,
  ...rest
} />

<query-client/client />

<const/defaultedOptions = client().defaultQueryOptions({queryKey, queryFn, ...rest}) />

<let/observer = (() => {
  const queryClient = client();
  const queryObserver = new QueryObserver(queryClient, defaultedOptions);
  return () => queryObserver;
})() />

<let/queryState = observer().getOptimisticResult({queryKey, queryFn, ...rest}) />

<effect = () => observer().subscribe(state => { queryState = state }) />

<return=queryState />