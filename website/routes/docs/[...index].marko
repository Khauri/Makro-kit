import 'highlight.js/styles/github.css';

export async function load({params: {'*': path} = {}} = {}) {
  const hljs = await import('highlight.js');
  const {marked} = await import('marked');
  const fs = await import('node:fs');
  const np = await import('node:path');
  const url = await import('node:url');
  // Load the appropriate markdown file for the page
  // const files = import.meta.glob('./*.md');
  if(!path) {
    path = '/index';
  }

  const mdPath = `.${path}.md`
  const absPath = np.resolve(url.fileURLToPath(np.dirname(import.meta.url)), mdPath);
  const file = await fs.promises.readFile(absPath);

  marked.setOptions({
    highlight: function (code, language) {
      return hljs.highlight(code, { language }).value;
    },
  });

  return {
    html: marked(file.toString()),
    // toc: result.toc
  };
}

<style>
  body {
    margin: 0;
  }
  .page {
    display: flex;
    flex-direction: row;
    width: 100vw;
    height: 100vh;
  }
  .sidebar {
    width: 200px;
  }
  .content {
    flex: 1;
  }
  article {
    max-width: 720px;
    margin: 0 auto;
  }
  pre {
    box-sizing: border-box;
    overflow-x: auto;
    width: 100%;
    margin-top: 1.27rem;
    border-radius: 6px;
    line-height: 1.5;
    background-color: #fafafa;
  }
  pre > code {
    display: block;
    padding: 1.2rem!important;
  }
</style>

<load/{value: {html, toc}} />

<div.page>
  <div.sidebar>
    Pollo JS
  </div>
  <div.content>
    <article>
      $!{html}
    </article>
  </div>
</div>
