import './md.css';
import 'highlight.js/styles/github.css';

static const pages = [
  {
    name: 'Home',
    path: '/',
  },
  {
    name: 'Routes',
    path: '/routes',
  }
];

export async function load({params: {'*': path} = {}} = {}) {
  const hljs = await import('highlight.js');
  const {marked} = await import('marked');
  const fs = await import('node:fs');
  const np = await import('node:path');
  const url = await import('node:url');
  const files = import.meta.glob('./*.md'); // Not used currently. May switch this to use a file loader
  // Load the appropriate markdown file for the page
  if(!path) {
    path = '/index';
  }

  const mdPath = `.${path}.md`
  const absPath = np.resolve(url.fileURLToPath(np.dirname(import.meta.url)), mdPath);
  const file = await fs.promises.readFile(absPath);

  marked.setOptions({
    highlight: function (code, language) {
      return hljs.highlight(code, { language }).value;
    },
  });

  return {
    html: marked(file.toString()),
    page: null,
    // toc: result.toc
  };
}

<style>
  body {
    margin: 0;
  }
  .page {
    display: flex;
    flex-direction: column;
    width: 100vw;
    height: 100vh;
  }
  .navbar {
    position: sticky;
    top: 0;
    padding: 20px 10px;
    border-bottom: 1px solid #ccc;
    flex: 0;
  }
  .main {
    display: flex;
    flex-direction: row;
    flex: 1;
    height: 100%;
  }
  .sidebar {
    width: 300px;
    box-sizing: content-box;
    position: sticky;
    top: 0;
    overflow-y: scroll;
  }
  .sidebar-links {
    list-style: none;
    padding: 10px;
    margin: 0;
  }
  .content {
    flex: 1;
    height: 100%;
    overflow: auto;
  }
  article {
    max-width: 720px;
    overflow-y: auto;
  }
</style>

<load/{value: {html, toc} = {}} />

<div.page>
  <header.navbar>
    <a href="/">Pollo JS</a>
  </header>
  <div.main>
    <aside.sidebar>
      <ul.sidebar-links>
        <for|page| of=pages>
          <li>
            <a href=`/docs${page.path}`>${page.name}</a>
          </li>
        </for>
      </ul>
    </aside>
    <div.content>
      <article.md>
        $!{html}
      </article>
    </div>
  </div>
</div>
